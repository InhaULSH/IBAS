# 리스트 요소로 튜플을 넣고, 튜플 요소로 딕셔너리를 넣은 예시를 만들자
std_dict = dict()
std_dict['1'] = "하나"
std_dict['2'] = "둘"
std_list1 = [1,2,3,(4,5,6,std_dict),7]
print(std_list1)
# 인덱싱 개념에 대해 설명하자
print("리스트, 튜플, 딕셔너리나 문자열 변수에서 각각의 요소 또는 문자는 인덱스라는 고유한 주소를 가지게 된다. 인덱스를 이용해서 변수 자체가 아닌 변수 속의 요소를 호출하는 것을 인덱싱이라고 한다.")
# 리스트 요소 추가와 삭제의 예시를 하나 들어보자
std_list2 = [1,2,3,4,5]
std_list2.append(67)
std_list2.pop(0)
print(std_list2)
# String 변수는 어떤 자료구조와 가장 닮았는지 이유를 들어설명해보자
print("String 변수는 인덱스를 통해 각 문자를 인덱싱할 수 있지만 문자를 추가 하거나 뺄 수 없다. 또 슬라이싱 기능을 통해 부분적으로 출력할 수도 있다.")
print("따라서 String 변수는 인덱싱과 슬라이싱이 가능하지만 수정이 안 되는 튜플과 가장 닮았다.")
# 슬라이싱에 대해 예시를 들고 설명해보자
std_list3 = ["안","녕","하","세","요"]
print(std_list3[0:2])
str_Hello = "Hello"
print(str_Hello[0:2])
print("이처럼 리스트, 튜플, 문자열 변수가 가진 요소들의 일정 부분만 호출하는 것을 슬라이싱이라고 하고 [a:b]는 인덱스 a에 해당하는 요소부터 b전에 있는 요소들까지 호출하라는 의미이다.")
# 슬라이싱은 어디에 활용할 수 있을지 설명해보자
print("슬라이싱은 변수에서 복수의 요소를 함께 호출해야 할때 가장 유용하다. 슬라이싱을 활용하면 하나하나 호출하는 수고를 할 필요가 없기 때문이다.")